spring:
  application:
    name: todotravel

  data:
    mongodb:
      uri: ${MONGODB_URI}

  datasource:
    url: ${MYSQL_URL}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect

  mail:
    host: smtp.gmail.com  # SMTP 서버 호스트
    port: 587 # SMTP 서버 포트
    username: ${SMTP_MAIL_USERNAME}  # SMTP 서버 로그인 아이디
    password: ${SMTP_MAIL_PASSWORD}  # SMTP 서버 로그인 패스워드 : 앱 비밀번호
    properties:
      mail:
        smtp:
          auth: true  # 사용자 인증 시도 여부 (기본값 : false)
          timeout: 5000 # Socket Read Timeout 시간(ms)(기본값 : 무한대)
          starttls:
            enable: true # StartTLS 활성화 여부 (기본값 : false)

  # oauth2 에 대한 설정
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI}
            scope: profile, email

          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            scope: profile_nickname, account_email
            authorization-grant-type: authorization_code
            redirect-uri: ${KAKAO_REDIRECT_URI}
            client-name: Kakao
            client-authentication-method: client_secret_post

          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            scope: name, email, nickname
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: ${NAVER_REDIRECT_URI}

        provider: # kakao, naver만 추가 작성
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

# openssl rand -hex 64
jwt:
  secretKey: ${JWT_SECRET_KEY}
  refreshKey: ${JWT_REFRESH_KEY}

cloud:
  aws:
    s3:
      bucket: ${S3_BUCKET_NAME}
    stack:
      auto: false
    region:
      static: ${AWS_REGION}
    credentials:
      accessKey: ${AWS_CREDENTIALS_ACCESS_KEY}
      secretKey: ${AWS_CREDENTIALS_SECRET_KEY}

server:
  port: 8080

app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS}

# 로깅 설정 추가
logging:
  file:
    name: ./logs/todotravel.log
  logback:
    rolling policy:
      file-name-pattern: ./logs/todotravel-%d{yyyy-MM-dd}.log
      max-file-size: 100MB
      max-history: 30
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  level:
    root: INFO
    org.springframework: INFO